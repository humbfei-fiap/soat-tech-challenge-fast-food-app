name: CI de Feature com Jobs Separados

on:
  push:
    branches:
      - 'feature/**'
    
jobs:
  # ----------------------------------------------------
  # JOB 1: Compilar a aplicação Java
  # ----------------------------------------------------
  build_java:
    runs-on: ubuntu-latest
    outputs:
      artifact_name: java-artifact
    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Configurar JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      - name: Fazer o Build com Maven
        run: mvn -B package --file pom.xml

      - name: Fazer upload do artefato Java (.jar)
        uses: actions/upload-artifact@v4
        with:
          name: java-artifact # Nome do artefato
          path: target/*.jar # Caminho para o arquivo que será salvo

  # ----------------------------------------------------
  # JOB 2: Construir a imagem Docker (sem push)
  # ----------------------------------------------------
  build_docker:
    runs-on: ubuntu-latest
    needs: build_java # Define que este job SÓ RODA DEPOIS que 'build_java' for concluído com sucesso
    permissions:
      contents: read
    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Baixar o artefato Java (.jar)
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.build_java.outputs.artifact_name }}
          path: target # Baixa o artefato para a pasta 'target'

      - name: Extrair metadados (tags e labels) do Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}
          tags: type=ref,event=branch

      - name: Construir a imagem Docker
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: false # Apenas constrói a imagem, não faz push
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  # ----------------------------------------------------
  # JOB 3: Criar o Pull Request
  # ----------------------------------------------------
  create_pull_request:
    runs-on: ubuntu-latest
    needs: build_docker # Define que este job SÓ RODA DEPOIS que 'build_docker' for concluído com sucesso
    permissions:
      pull-requests: write
      contents: read
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4
        
      - name: Criar Pull Request para develop
        uses: repo-sync/pull-request@v2
        with:
          source_branch: ${{ github.ref_name }}
          destination_branch: "develop"
          pr_title: "PR de ${{ github.ref_name }}"
          pr_body: |
            Build da aplicação Java e da imagem Docker concluídos com sucesso.
            O PR está pronto para revisão.
          pr_label: "automação,docker"
          github_token: ${{ secrets.GITHUB_TOKEN }}
